@import '../../marketplace.css';

.root {
  display: flex;
  flex-direction: column;

  @media (--desktopViewport) {
    flex-direction: row;
  }
}

.withPadding {
  padding: calc(2 * var(--spacingUnit));

  @media (--desktopViewport) {
    padding: calc(2 * var(--spacingUnitDesktop));
  }
}

.withMargin,
.defaultWrapperStyles {
  margin: calc(2 * var(--spacingUnit)) 0;

  @media (--desktopViewport) {
    margin: calc(2 * var(--spacingUnitDesktop)) 0;
  }
}

.navBar {
  flex-basis: 300px;
  flex-shrink: 0;
  composes: withPadding;
  box-shadow: var(--boxShadow);
}

.main {
  flex-grow: 1;
  composes: withPadding;

  @media (--desktopViewport) {
    padding: 56px 0 0 16px;
  }
}

.link {
  color: var(--marketplaceColor);
}

.groups {
  margin: 0 0 12px 0;
}

.group {
  text-transform: capitalize;
}

.selectedGroup {
  font-weight: bold;
  color: var(--marketplaceColorDark);
}

/* Typography.example */
.typographyContent {}

.baselines {
  background-image: url('data:image/svg+xml;utf8,<svg width="10" height="24" viewBox="0 0 10 24" xmlns="http://www.w3.org/2000/svg"><path d="M0 5h10M0 11h10M0 17h10" stroke="#f1f1f1"/><path d="M0 23h10" stroke="#ddd" stroke-width="1"/></svg>');
  background-repeat: repeat;

  @media (--desktopViewport) {
      background-image: url('data:image/svg+xml;utf8,<svg width="10" height="24" viewBox="0 0 10 24" xmlns="http://www.w3.org/2000/svg"><path d="M0 7h10M0 15h10M0" stroke="#f1f1f1"/><path d="M0 23h10" stroke="#ddd" stroke-width="1"/></svg>');
      background-repeat: repeat;
  }
}

.spacing2x {
  margin: calc(2 * var(--spacingUnit)) 0;
}

.fontsContainer {
  display: flex;
  flex-wrap: wrap;
  margin-top: calc(4 * var(--spacingUnit));
}

.fontCard {
  flex-basis: 300px;
  display: flex;
  flex-direction: column;

  /**
   * FontCard contains 4px worth of borders, which needs to be factored in since we use
   * box-sizing: border-box;
   * In this case, we'll adjust margin-bottoms (24px - 4px = 20px)
   */
  margin-bottom: calc(4 * var(--spacingUnit) - 4px);
  margin-right: calc(2 * var(--spacingUnit));
}

.element {
  border-style: solid;
  border-color: #aaa;
  border-width: 1px;
}

.description {
  flex-grow: 1;
  width: 100%;
  background-color: #f1f1f1;
  padding: calc(2 * var(--spacingUnit));

  border-style: solid;
  border-color: #aaa;
  border-width: 1px;
  border-top-color: transparent;
}

/* Colors.example */

.colorsContent,
.colorsContainer {
  display: flex;
  flex-direction: column;
}

.colorsGroup {
  display: flex;
  flex-wrap: wrap;
  margin-top: calc(4 * var(--spacingUnit));
}

.colorCard {
  flex-basis: 275px;
  height: 275px;
  display: flex;
  flex-direction: column;
  margin-bottom: calc(4 * var(--spacingUnit));
  margin-right: calc(2 * var(--spacingUnit));
  overflow: hidden;

  border: 1px solid var(--matterColorNegative);
}

.color {
  width: 100%;
  height: 66.6%;
}

.colorDescription {
  flex-grow: 1;
  width: 100%;
  background-color: #fff;
  padding: calc(2 * var(--spacingUnit));
}

.marketplaceColorBackground {
  composes: color;
  background-color: var(--marketplaceColor);
}

.marketplaceColorLightBackground {
  composes: color;
  background-color: var(--marketplaceColorLight);
}

.marketplaceColorDarkBackground {
  composes: color;
  background-color: var(--marketplaceColorDark);
}

.successColorBackground {
  composes: color;
  background-color: var(--successColor);
}

.failColorBackground {
  composes: color;
  background-color: var(--failColor);
}

.attentionColorBackground {
  composes: color;
  background-color: var(--attentionColor);
}

.matterColorBackground {
  composes: color;
  background-color: var(--matterColor);
}

.matterColorAntiBackground {
  composes: color;
  background-color: var(--matterColorAnti);
}

.matterColorDarkBackground {
  composes: color;
  background-color: var(--matterColorDark);
}

.matterColorNegativeBackground {
  composes: color;
  background-color: var(--matterColorNegative);
}

.matterColorLightBackground {
  composes: color;
  background-color: var(--matterColorLight);
}
