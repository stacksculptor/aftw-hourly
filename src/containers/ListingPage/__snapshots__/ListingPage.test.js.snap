// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListingPage matches snapshot 1`] = `
<Page
  author="user-1 display name"
  contentType="website"
  description="listing1 description"
  facebookImages={Array []}
  schema={
    Object {
      "@context": "http://schema.org",
      "@type": "ItemPage",
      "description": "listing1 description",
      "image": "[]",
      "name": "ListingPage.schemaTitle",
    }
  }
  scrollingDisabled={false}
  title="ListingPage.schemaTitle"
  twitterImages={Array []}
>
  <LayoutSingleColumn
    className={null}
    rootClassName={null}
  >
    <LayoutWrapperTopbar
      className={null}
      rootClassName={null}
    >
      <withRouter(Connect(TopbarContainerComponent)) />
    </LayoutWrapperTopbar>
    <LayoutWrapperMain
      className={null}
      rootClassName={null}
    >
      <div>
        <div>
          <div
            onClick={[Function]}
          >
            <div
              onClick={[Function]}
            >
              <ActionBar
                editParams={
                  Object {
                    "id": "listing1",
                    "slug": "listing1-title",
                    "tab": "description",
                    "type": "edit",
                  }
                }
                isClosed={false}
                isOwnListing={false}
              />
            </div>
            <ResponsiveImage
              alt="listing1 title"
              className={null}
              image={null}
              nameSet={
                Array [
                  Object {
                    "name": "landscape-crop",
                    "size": "400w",
                  },
                  Object {
                    "name": "landscape-crop2x",
                    "size": "800w",
                  },
                  Object {
                    "name": "landscape-crop4x",
                    "size": "1600w",
                  },
                  Object {
                    "name": "landscape-crop6x",
                    "size": "2400w",
                  },
                ]
              }
              noImageMessage={null}
              rootClassName={null}
              sizes="100vw"
            />
          </div>
        </div>
        <InjectIntl(ModalComponent)
          id="ListingPage.imageCarousel"
          isOpen={false}
          lightCloseButton={true}
          onClose={[Function]}
          onManageDisableScrolling={[Function]}
        >
          <InjectIntl(ImageCarousel)
            images={Array []}
          />
        </InjectIntl(ModalComponent)>
        <div>
          <div>
            <NamedLink
              name="ListingPage"
              params={
                Object {
                  "id": "listing1",
                  "slug": "listing1-title",
                }
              }
              to={
                Object {
                  "hash": "#host",
                }
              }
            >
              <AvatarLarge
                disableProfileLink={true}
                user={
                  Object {
                    "attributes": Object {
                      "banned": false,
                      "profile": Object {
                        "abbreviatedName": "TT",
                        "displayName": "user-1 display name",
                      },
                    },
                    "id": UUID {
                      "uuid": "user-1",
                    },
                    "type": "user",
                  }
                }
              />
            </NamedLink>
            <NamedLink
              name="ListingPage"
              params={
                Object {
                  "id": "listing1",
                  "slug": "listing1-title",
                }
              }
              to={
                Object {
                  "hash": "#host",
                }
              }
            >
              <AvatarMedium
                disableProfileLink={true}
                user={
                  Object {
                    "attributes": Object {
                      "banned": false,
                      "profile": Object {
                        "abbreviatedName": "TT",
                        "displayName": "user-1 display name",
                      },
                    },
                    "id": UUID {
                      "uuid": "user-1",
                    },
                    "type": "user",
                  }
                }
              />
            </NamedLink>
          </div>
          <div>
            <div>
              <div>
                <div
                  title={55}
                >
                  55
                </div>
                <div>
                  <FormattedMessage
                    id="ListingPage.perNight"
                    values={Object {}}
                  />
                </div>
              </div>
              <div>
                <h1>
                  listing1 title
                </h1>
                <div>
                  <FormattedMessage
                    id="ListingPage.hostedBy"
                    values={
                      Object {
                        "name": <NamedLink
                          name="ListingPage"
                          params={
                              Object {
                                  "id": "listing1",
                                  "slug": "listing1-title",
                                }
                          }
                          to={
                              Object {
                                  "hash": "#host",
                                }
                          }
                      >
                          user-1 display name
                      </NamedLink>,
                      }
                    }
                  />
                  <span>
                    <span>
                      â€¢
                    </span>
                    <InlineTextButton
                      onClick={[Function]}
                    >
                      <FormattedMessage
                        id="ListingPage.contactUser"
                        values={Object {}}
                      />
                    </InlineTextButton>
                  </span>
                </div>
              </div>
            </div>
            <div>
              <h2>
                <FormattedMessage
                  id="ListingPage.descriptionTitle"
                  values={Object {}}
                />
              </h2>
              <p>
                listing1 description
              </p>
            </div>
            <div>
              <h2>
                <FormattedMessage
                  id="ListingPage.locationTitle"
                  values={Object {}}
                />
              </h2>
              <div>
                <Map
                  address="listing1 address"
                  center={
                    LatLng {
                      "lat": 40,
                      "lng": 60,
                    }
                  }
                  className=""
                  rootClassName={null}
                  zoom={11}
                />
              </div>
            </div>
            <div>
              <h2>
                <FormattedMessage
                  id="ListingPage.reviewsHeading"
                  values={
                    Object {
                      "count": 0,
                    }
                  }
                />
              </h2>
              <InjectIntl(ReviewsComponent)
                reviews={Array []}
              />
            </div>
            <div
              id="host"
            >
              <h2>
                <FormattedMessage
                  id="ListingPage.yourHostHeading"
                  values={Object {}}
                />
              </h2>
              <UserCard
                className={null}
                currentUser={
                  Object {
                    "attributes": Object {
                      "banned": false,
                      "email": "user-2@example.com",
                      "emailVerified": true,
                      "profile": Object {
                        "abbreviatedName": "user-2 abbreviated name",
                        "displayName": "user-2 display name",
                        "firstName": "user-2 first name",
                        "lastName": "user-2 last name",
                      },
                      "stripeConnected": true,
                    },
                    "id": UUID {
                      "uuid": "user-2",
                    },
                    "type": "currentUser",
                  }
                }
                onContactUser={[Function]}
                rootClassName={null}
                user={
                  Object {
                    "attributes": Object {
                      "banned": false,
                      "profile": Object {
                        "abbreviatedName": "TT",
                        "displayName": "user-1 display name",
                      },
                    },
                    "id": UUID {
                      "uuid": "user-1",
                    },
                    "type": "user",
                  }
                }
              />
              <InjectIntl(ModalComponent)
                id="ListingPage.enquiry"
                isOpen={false}
                onClose={[Function]}
                onManageDisableScrolling={[Function]}
              >
                <ReduxForm
                  authorDisplayName="user-1 display name"
                  inProgress={false}
                  listingTitle="listing1 title"
                  onSubmit={[Function]}
                  sendEnquiryError={null}
                />
              </InjectIntl(ModalComponent)>
            </div>
          </div>
          <withViewport(ModalInMobileComponent)
            id="BookingDatesFormInModal"
            isModalOpenOnMobile={false}
            onClose={[Function]}
            onManageDisableScrolling={[Function]}
            showAsModalMaxWidth={1023}
          >
            <div>
              <h1>
                listing1 title
              </h1>
              <div>
                <span>
                  <FormattedMessage
                    id="ListingPage.hostedBy"
                    values={
                      Object {
                        "name": "user-1 display name",
                      }
                    }
                  />
                </span>
              </div>
            </div>
            <div>
              <h2>
                <FormattedMessage
                  id="ListingPage.bookingTitle"
                  values={
                    Object {
                      "title": "listing1 title",
                    }
                  }
                />
              </h2>
              <div>
                <FormattedMessage
                  id="ListingPage.bookingHelp"
                  values={Object {}}
                />
              </div>
            </div>
            <BookingDatesForm
              isOwnListing={false}
              onSubmit={[Function]}
              price={
                Money {
                  "amount": 5500,
                  "currency": "USD",
                }
              }
            />
          </withViewport(ModalInMobileComponent)>
          <div>
            <div>
              <div
                title={55}
              >
                55
              </div>
              <div>
                <FormattedMessage
                  id="ListingPage.perNight"
                  values={Object {}}
                />
              </div>
            </div>
            <Button
              className={null}
              disabled={false}
              inProgress={false}
              onClick={[Function]}
              ready={false}
              rootClassName={null}
            >
              ListingPage.ctaButtonMessage
            </Button>
          </div>
        </div>
      </div>
    </LayoutWrapperMain>
    <LayoutWrapperFooter
      className={null}
      rootClassName={null}
    >
      <InjectIntl(Footer) />
    </LayoutWrapperFooter>
  </LayoutSingleColumn>
</Page>
`;
