exports[`InboxPage matches snapshot 1`] = `
<Connect(withRouter(PageLayout))
  title="InboxPage.ordersTitle">
  <h1>
    <FormattedMessage
      id="InboxPage.title"
      values={Object {}} />
  </h1>
  <TabNav
    className=""
    tabs={
      Array [
        Object {
          "linkProps": Object {
            "name": "InboxPage",
            "params": Object {
              "tab": "orders",
            },
          },
          "selected": true,
          "text": "InboxPage.ordersTabTitle",
        },
        Object {
          "linkProps": Object {
            "name": "InboxPage",
            "params": Object {
              "tab": "sales",
            },
          },
          "selected": false,
          "text": "InboxPage.salesTabTitle",
        },
      ]
    } />
  <ul>
    <li>
      <Component
        intl={
          Object {
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "now": [Function],
          }
        }
        tx={
          Object {
            "attributes": Object {
              "createdAt": 2017-05-01T00:00:00.000Z,
              "lastTransitionedAt": 2017-01-15T00:00:00.000Z,
              "lineItems": Array [
                Object {
                  "code": "line-item.purchase/night",
                  "lineTotal": Money {
                    "amount": 1000,
                    "currency": "USD",
                  },
                  "quantity": "1",
                  "unitPrice": Money {
                    "amount": 1000,
                    "currency": "USD",
                  },
                },
                Object {
                  "code": "line-item.commission/provider",
                  "lineTotal": Money {
                    "amount": 100,
                    "currency": "USD",
                  },
                  "unitPrice": Money {
                    "amount": 100,
                    "currency": "USD",
                  },
                },
              ],
              "payinTotal": Money {
                "amount": 1000,
                "currency": "USD",
              },
              "payoutTotal": Money {
                "amount": 900,
                "currency": "USD",
              },
              "state": "state/preauthorized",
            },
            "booking": null,
            "customer": null,
            "id": UUID {
              "uuid": "order-1",
            },
            "listing": null,
            "provider": Object {
              "attributes": Object {
                "profile": Object {
                  "firstName": "provider-user-id first name",
                  "lastName": "provider-user-id last name",
                },
              },
              "id": UUID {
                "uuid": "provider-user-id",
              },
              "type": "user",
            },
            "type": "transaction",
          }
        }
        type="order" />
    </li>
    <li>
      <Component
        intl={
          Object {
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "now": [Function],
          }
        }
        tx={
          Object {
            "attributes": Object {
              "createdAt": 2017-05-01T00:00:00.000Z,
              "lastTransitionedAt": 2016-01-15T00:00:00.000Z,
              "lineItems": Array [
                Object {
                  "code": "line-item.purchase/night",
                  "lineTotal": Money {
                    "amount": 1000,
                    "currency": "USD",
                  },
                  "quantity": "1",
                  "unitPrice": Money {
                    "amount": 1000,
                    "currency": "USD",
                  },
                },
                Object {
                  "code": "line-item.commission/provider",
                  "lineTotal": Money {
                    "amount": 100,
                    "currency": "USD",
                  },
                  "unitPrice": Money {
                    "amount": 100,
                    "currency": "USD",
                  },
                },
              ],
              "payinTotal": Money {
                "amount": 1000,
                "currency": "USD",
              },
              "payoutTotal": Money {
                "amount": 900,
                "currency": "USD",
              },
              "state": "state/preauthorized",
            },
            "booking": null,
            "customer": null,
            "id": UUID {
              "uuid": "order-2",
            },
            "listing": null,
            "provider": Object {
              "attributes": Object {
                "profile": Object {
                  "firstName": "provider-user-id first name",
                  "lastName": "provider-user-id last name",
                },
              },
              "id": UUID {
                "uuid": "provider-user-id",
              },
              "type": "user",
            },
            "type": "transaction",
          }
        }
        type="order" />
    </li>
  </ul>
</Connect(withRouter(PageLayout))>
`;

exports[`InboxPage matches snapshot 2`] = `
<a
  className=""
  href="/order/order-1/details"
  onClick={[Function]}
  style={Object {}}
  title={null}>
  <div
    className={undefined}>
    <div
      className=""
      title="provider-user-id first name provider-user-id last name">
      <span>
        pp
      </span>
    </div>
  </div>
  <div
    className={undefined}>
    <div>
      <span
        className={undefined}>
        provider-user-id first name provider-user-id last name
      </span>
      <span
        className={undefined}
        title="2017-01-15 00:00">
        2017-01-15
      </span>
    </div>
    <div
      className={undefined}>
      InboxPage.statePending
    </div>
  </div>
</a>
`;

exports[`InboxPage matches snapshot 3`] = `
<Connect(withRouter(PageLayout))
  title="InboxPage.salesTitle">
  <h1>
    <FormattedMessage
      id="InboxPage.title"
      values={Object {}} />
  </h1>
  <TabNav
    className=""
    tabs={
      Array [
        Object {
          "linkProps": Object {
            "name": "InboxPage",
            "params": Object {
              "tab": "orders",
            },
          },
          "selected": false,
          "text": "InboxPage.ordersTabTitle",
        },
        Object {
          "linkProps": Object {
            "name": "InboxPage",
            "params": Object {
              "tab": "sales",
            },
          },
          "selected": true,
          "text": "InboxPage.salesTabTitle",
        },
      ]
    } />
  <ul>
    <li>
      <Component
        intl={
          Object {
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "now": [Function],
          }
        }
        tx={
          Object {
            "attributes": Object {
              "createdAt": 2017-05-01T00:00:00.000Z,
              "lastTransitionedAt": 2017-01-15T00:00:00.000Z,
              "lineItems": Array [
                Object {
                  "code": "line-item.purchase/night",
                  "lineTotal": Money {
                    "amount": 1000,
                    "currency": "USD",
                  },
                  "quantity": "1",
                  "unitPrice": Money {
                    "amount": 1000,
                    "currency": "USD",
                  },
                },
                Object {
                  "code": "line-item.commission/provider",
                  "lineTotal": Money {
                    "amount": 100,
                    "currency": "USD",
                  },
                  "unitPrice": Money {
                    "amount": 100,
                    "currency": "USD",
                  },
                },
              ],
              "payinTotal": Money {
                "amount": 1000,
                "currency": "USD",
              },
              "payoutTotal": Money {
                "amount": 900,
                "currency": "USD",
              },
              "state": "state/preauthorized",
            },
            "booking": null,
            "customer": Object {
              "attributes": Object {
                "profile": Object {
                  "firstName": "customer-user-id first name",
                  "lastName": "customer-user-id last name",
                },
              },
              "id": UUID {
                "uuid": "customer-user-id",
              },
              "type": "user",
            },
            "id": UUID {
              "uuid": "sale-1",
            },
            "listing": null,
            "provider": null,
            "type": "transaction",
          }
        }
        type="sale" />
    </li>
    <li>
      <Component
        intl={
          Object {
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "now": [Function],
          }
        }
        tx={
          Object {
            "attributes": Object {
              "createdAt": 2017-05-01T00:00:00.000Z,
              "lastTransitionedAt": 2016-01-15T00:00:00.000Z,
              "lineItems": Array [
                Object {
                  "code": "line-item.purchase/night",
                  "lineTotal": Money {
                    "amount": 1000,
                    "currency": "USD",
                  },
                  "quantity": "1",
                  "unitPrice": Money {
                    "amount": 1000,
                    "currency": "USD",
                  },
                },
                Object {
                  "code": "line-item.commission/provider",
                  "lineTotal": Money {
                    "amount": 100,
                    "currency": "USD",
                  },
                  "unitPrice": Money {
                    "amount": 100,
                    "currency": "USD",
                  },
                },
              ],
              "payinTotal": Money {
                "amount": 1000,
                "currency": "USD",
              },
              "payoutTotal": Money {
                "amount": 900,
                "currency": "USD",
              },
              "state": "state/preauthorized",
            },
            "booking": null,
            "customer": Object {
              "attributes": Object {
                "profile": Object {
                  "firstName": "customer-user-id first name",
                  "lastName": "customer-user-id last name",
                },
              },
              "id": UUID {
                "uuid": "customer-user-id",
              },
              "type": "user",
            },
            "id": UUID {
              "uuid": "sale-2",
            },
            "listing": null,
            "provider": null,
            "type": "transaction",
          }
        }
        type="sale" />
    </li>
  </ul>
</Connect(withRouter(PageLayout))>
`;

exports[`InboxPage matches snapshot 4`] = `
<a
  className=""
  href="/sale/sale-1/details"
  onClick={[Function]}
  style={Object {}}
  title={null}>
  <div
    className={undefined}>
    <div
      className=""
      title="customer-user-id first name customer-user-id last name">
      <span>
        cc
      </span>
    </div>
  </div>
  <div
    className={undefined}>
    <div>
      <span
        className={undefined}>
        customer-user-id first name customer-user-id last name
      </span>
      <span
        className={undefined}
        title="2017-01-15 00:00">
        2017-01-15
      </span>
    </div>
    <div
      className={undefined}>
      InboxPage.statePending
    </div>
  </div>
</a>
`;
