exports[`OrderPage matches snapshot 1`] = `
<withRouter(PageLayout)
  authInfoError={null}
  logoutError={null}
  scrollingDisabled={false}
  title="OrderPage.title">
  <Topbar
    authInProgress={false}
    currentUser={
      Object {
        "attributes": Object {
          "email": "customer1@example.com",
          "profile": Object {
            "abbreviatedName": "customer1 abbreviated name",
            "displayName": "customer1 display name",
            "firstName": "customer1 first name",
            "lastName": "customer1 last name",
          },
          "stripeConnected": true,
        },
        "id": UUID {
          "uuid": "customer1",
        },
        "type": "current-user",
      }
    }
    currentUserHasListings={false}
    currentUserHasOrders={null}
    history={
      Object {
        "push": [Function],
      }
    }
    isAuthenticated={false}
    location={
      Object {
        "search": "",
      }
    }
    notificationCount={0}
    onLogout={[Function]}
    onManageDisableScrolling={[Function]}
    onResendVerificationEmail={[Function]}
    sendVerificationEmailError={null}
    sendVerificationEmailInProgress={false} />
  <OrderDetailsPanel
    className="undefined"
    lastTransition={null}
    rootClassName={null}
    transaction={
      Object {
        "attributes": Object {
          "createdAt": 2017-05-01T00:00:00.000Z,
          "lastTransition": "transition/preauthorize",
          "lastTransitionedAt": 2017-06-01T00:00:00.000Z,
          "lineItems": Array [
            Object {
              "code": "line-item/night",
              "lineTotal": Money {
                "amount": 1000,
                "currency": "USD",
              },
              "quantity": "3",
              "unitPrice": Money {
                "amount": 333.3333333333333,
                "currency": "USD",
              },
            },
            Object {
              "code": "line-item/provider-commission",
              "lineTotal": Money {
                "amount": -100,
                "currency": "USD",
              },
              "unitPrice": Money {
                "amount": -100,
                "currency": "USD",
              },
            },
          ],
          "payinTotal": Money {
            "amount": 1000,
            "currency": "USD",
          },
          "payoutTotal": Money {
            "amount": 900,
            "currency": "USD",
          },
          "state": "state/preauthorized",
        },
        "booking": Object {
          "attributes": Object {
            "end": 2017-06-13T00:00:00.000Z,
            "start": 2017-06-10T00:00:00.000Z,
          },
          "id": UUID {
            "uuid": "booking1",
          },
          "type": "booking",
        },
        "customer": Object {
          "attributes": Object {
            "profile": Object {
              "abbreviatedName": "customer1 abbreviated name",
              "displayName": "customer1 display name",
            },
          },
          "id": UUID {
            "uuid": "customer1",
          },
          "type": "user",
        },
        "id": UUID {
          "uuid": "tx-order-1",
        },
        "listing": Object {
          "attributes": Object {
            "address": "listing1 address",
            "description": "listing1 description",
            "geolocation": LatLng {
              "lat": 40,
              "lng": 60,
            },
            "open": true,
            "price": Money {
              "amount": 5500,
              "currency": "USD",
            },
            "title": "listing1 title",
          },
          "id": UUID {
            "uuid": "listing1",
          },
          "type": "listing",
        },
        "provider": Object {
          "attributes": Object {
            "profile": Object {
              "abbreviatedName": "provider1 abbreviated name",
              "displayName": "provider1 display name",
            },
          },
          "id": UUID {
            "uuid": "provider1",
          },
          "type": "user",
        },
        "type": "transaction",
      }
    } />
</withRouter(PageLayout)>
`;
